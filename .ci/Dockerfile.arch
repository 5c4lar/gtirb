FROM archlinux/base

ARG CXX_COMPILER=g++
ARG EXTRA_CMAKE_FLAGS=

RUN sed -i 's/#\[multilib\]/\[multilib\]/; /^\[multilib\]/,/^$/ s/^#//' /etc/pacman.conf
RUN pacman --noconfirm -Syu archlinux-keyring
RUN pacman --noconfirm -Syu autoconf base-devel boost clang cmake doxygen gcc \
        gcc-libs git graphviz jdk8-openjdk libtool protobuf python python-pip make wget
RUN python3 -m pip install wheel

# Common-Lisp specific setup.
RUN sed -i "s/^\(OPT_LONG=(\)/\1'asroot' /;s/EUID == 0/1 == 0/" /usr/bin/makepkg
RUN git clone --depth 1 https://aur.archlinux.org/yay.git /yay-aur
RUN sed -i "s|^  cd \"\$srcdir/\$pkgname-\$pkgver\"|&\\n  sed -i 's/os.Geteuid()/1/' main.go install.go|" /yay-aur/PKGBUILD
RUN cd /yay-aur && makepkg --noconfirm -si
RUN yay --noconfirm -Sy emacs sbcl slime emacs-paredit cl-protobuf
RUN curl -O https://beta.quicklisp.org/quicklisp.lisp
RUN sbcl --load quicklisp.lisp \
        --eval '(quicklisp-quickstart:install)' \
        --eval '(let ((ql-util::*do-not-prompt* t)) (ql:add-to-init-file))'
RUN git clone https://github.com/eschulte/simpler-documentation-template /root/quicklisp/local-projects/simpler-documentation-template
RUN git clone https://github.com/rpav/cl-interval /root/quicklisp/local-projects/cl-interval
RUN git clone https://github.com/brown/protobuf /root/quicklisp/local-projects/protobuf

COPY . /gt/gtirb/

# Ensure all Common Lisp dependencies are installed before the build.
# Works around the fact that you can't run multiple Quicklisp dependency installs in parallel as done by 'make -j'.
RUN rm -rf /gt/gtirb/build /gt/gtirb/CMakeCache.txt /gt/gtirb/CMakeFiles /gt/gtirb/CMakeScripts
RUN sbcl --eval '(asdf:initialize-source-registry `(:source-registry (:tree "/gt/gtirb/cl") :inherit-configuration))' \
        --eval '(ql:quickload :gtirb/test)' --eval '(sb-ext:exit)'

# Build GTIRB.
RUN mkdir build
WORKDIR /gt/gtirb/build/
ARG BUILD_TYPE=RelWithDebInfo
RUN cmake ../ -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_BUILD_TYPE=$BUILD_TYPE
RUN make -j

# Build python wheel
RUN make python-wheel

# Run makepkg.
RUN mkdir /tmp/aur
RUN cp /gt/gtirb/.ci/PKGBUILD /tmp/aur
WORKDIR /tmp/aur
RUN sed -i 's|git://github.com/grammatech/gtirb.git|git+file:///gt/gtirb|' PKGBUILD
RUN makepkg
RUN cp *.xz /gt/gtirb/build/

ENV PATH=/gt/gtirb/build/bin:$PATH
