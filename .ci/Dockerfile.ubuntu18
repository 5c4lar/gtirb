FROM ubuntu:18.04

ARG CXX_COMPILER=g++-7
ARG BOOST_VERSION=1.67.0
ARG PROTOBUF_VERSION=3.7.0

# Use bash for more convenient variable substitution syntax
SHELL ["/bin/bash", "-c"]

# install apt packages
RUN apt-get -y update && \
    apt-get -y install autoconf build-essential clang cmake curl default-jdk git \
        libtool python3-setuptools wget software-properties-common \
        sbcl cl-quicklisp emacs-nox slime elpa-paredit

ENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH


RUN add-apt-repository ppa:mhier/libboost-latest && \
    add-apt-repository ppa:roehling/grpc && \
    apt-get -y update && \
    apt-get -y install libboost1.70-dev libprotobuf-dev protobuf-compiler libprotoc-dev

# Common-Lisp specific setup.
RUN sbcl --load /usr/share/cl-quicklisp/quicklisp.lisp \
        --eval '(quicklisp-quickstart:install)' \
        --eval '(let ((ql-util::*do-not-prompt* t)) (ql:add-to-init-file))'
RUN sbcl --eval '(ql:quickload :protobuf)' --eval '(sb-ext:exit)'
RUN git clone https://github.com/brown/protobuf /root/quicklisp/local-projects/protobuf
RUN cd /root/quicklisp/local-projects/protobuf/protoc/lisp && INSTALL_ROOT=/usr/ PROTOC_ROOT=/usr/ make install
RUN git clone https://github.com/eschulte/simpler-documentation-template /root/quicklisp/local-projects/simpler-documentation-template

# Build GTIRB
COPY . /gt/gtirb/

# Ensure all Common Lisp dependencies are installed before the build.
# Works around the fact that you can't run multiple Quicklisp dependency installs in parallel as done by 'make -j'.
RUN rm -rf /gt/gtirb/build /gt/gtirb/CMakeCache.txt /gt/gtirb/CMakeFiles /gt/gtirb/CMakeScripts
RUN sbcl --eval '(asdf:initialize-source-registry `(:source-registry (:tree "/gt/gtirb/cl") :inherit-configuration))' \
        --eval '(ql:quickload :gtirb/test)' --eval '(sb-ext:exit)'

# Build GTIRB.
RUN mkdir build
WORKDIR /gt/gtirb/build/
RUN cmake ../ -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCPACK_DEBIAN_PACKAGE_RELEASE="$(lsb_release -sc)"
RUN make -j

# Run CPack.
ARG CPACK_GENERATOR=""
RUN if [ ! -z "${CPACK_GENERATOR}" ] ; then cd /gt/gtirb/build && cpack -G "${CPACK_GENERATOR}"; fi

# Set up envionment for interactive use.
ENV PATH=/gt/gtirb/build/bin:$PATH
